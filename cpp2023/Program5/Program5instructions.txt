COSC 1337 Fundamentals of Programming II
Kathryn Rehfield
Lab 5: Editing Objects
Due: 11/12/23
Make any modifications necessary to address feedback about your previous lab.

You will now implement option 5 – Edit a CD.
This option will be in its own function.

Option 5: You will decide exactly how this option will work. 
You must allow the user to update any of the attributes in a CD object that is in the collection.  Once it is determined that the CD is in the collection, find out which field(s) need(s) to be updated. Don’t assume they all need to be updated.  
Read the user input and update the appropriate field(s). 
You decide how to get this information from the user.  I will be looking for a simple, easy-to-use, error-proof interface. 
You may be able to use part of your findCD function if you wrote it in a modular fashion.  You do not have to re-write your findCD function, but you can if you need to.

You will submit the following:
Your program source code named “lab5_Firstname_Lastname.cpp”

NOTE – Violating any of the following will get you a 20 point deduction on your lab:
Your main() controls the program.  Your main() should never just call another function to do all the work.
You should NEVER call main().
You should NEVER intentionally write an infinite loop.
You should NEVER use break, exit, quit, end, return, or anything to leave a loop, function, or other construct prematurely, unless it is part of the structure as in a switch statement.
You should NEVER have a function call itself, unless it is intentional recursion.
You should NEVER use global variables.  However, you may use global constants if it is appropriate and they are used properly.
You should have only one return statement in a function that returns a value. (Recursion is the exception.)

Lab Grade Points
Comments 
Including:
Program description (comment block at top of program with name, lab number and complete program description)
Function descriptions (see function heading below)
Comments at major algorithm steps (at a minimum)
Followed directions
Correct output
Structured program design
Meaningful identifier names

Function heading should look similar to this:
/**************************************************/
/* Function:   functionName                                       
/* Inputs:       parameter names and what they represent
/* Outputs:    return value name and description
/* Purpose:    This function blah, blah, blah...        
/**************************************************/